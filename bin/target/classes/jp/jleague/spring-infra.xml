<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        ">

	<bean id="infra.properties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="locations">
			<list>
				<value>classpath:config/infra.properties</value>
				<value>classpath:config/infra-local.properties</value>
			</list>
		</property>
		<property name="ignoreResourceNotFound" value="true" />
	</bean>
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer" depends-on="infra.properties">
		<property name="properties" ref="infra.properties" />
	</bean>

	<bean id="infra.aws.credentials" class="com.amazonaws.auth.AWSCredentialsProviderChain">
		<constructor-arg index="0">
			<array value-type="com.amazonaws.auth.AWSCredentialsProvider">
				<bean class="com.amazonaws.auth.SystemPropertiesCredentialsProvider" />
				<bean class="com.amazonaws.auth.EnvironmentVariableCredentialsProvider" />
				<bean class="com.amazonaws.auth.InstanceProfileCredentialsProvider" />
				<bean class="com.amazonaws.internal.StaticCredentialsProvider">
					<constructor-arg type="com.amazonaws.auth.AWSCredentials">
						<bean class="com.amazonaws.auth.BasicAWSCredentials">
							<constructor-arg index="0" type="java.lang.String" value="${infra.aws.aws_access_key_id}" />
							<constructor-arg index="1" type="java.lang.String" value="${infra.aws.aws_secret_key}" />
						</bean>
					</constructor-arg>
				</bean>
			</array>
		</constructor-arg>
	</bean>

	<bean id="infra.dataSource.masterDB.write" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${infra.dataSource.masterDB.write.DriverClassName}" />
		<property name="url" value="${infra.dataSource.masterDB.write.URL}" />
		<property name="username" value="${infra.dataSource.masterDB.write.Username}" />
		<property name="password">
			<bean class="jp.jleague.japp.backend.commons.aws.kms.AWSKMSEncryptedStringDecryptBean">
				<property name="awsCredentials" ref="infra.aws.credentials" />
				<property name="value" value="${infra.dataSource.masterDB.write.Password}" />
				<property name="plaintext" value="${infra.dataSource.masterDB.write.Password.plaintext}" />
			</bean>
		</property>
		<property name="defaultReadOnly" value="false" />
		<property name="defaultAutoCommit" value="false" />
		<property name="defaultQueryTimeout" value="60000" />
		<property name="initialSize" value="${infra.dataSource.masterDB.write.MaxTotal}" />
		<property name="maxIdle" value="${infra.dataSource.masterDB.write.MaxTotal}" />
		<property name="maxTotal" value="${infra.dataSource.masterDB.write.MaxTotal}" />
		<property name="lifo" value="true" />
		<property name="logAbandoned" value="false" />
		<property name="rollbackOnReturn" value="true" />
		<property name="validationQuery" value="show global variables where variable_name='innodb_read_only' and value = 'OFF'" />
		<property name="validationQueryTimeout" value="1000" />
		<property name="testOnCreate" value="false" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="false" />
	</bean>

	<bean id="infra.dataSource.masterDB.read" class="org.apache.commons.dbcp2.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${infra.dataSource.masterDB.read.DriverClassName}" />
		<property name="url" value="${infra.dataSource.masterDB.read.URL}" />
		<property name="username" value="${infra.dataSource.masterDB.read.Username}" />
		<property name="password">
			<bean class="jp.jleague.japp.backend.commons.aws.kms.AWSKMSEncryptedStringDecryptBean">
				<property name="awsCredentials" ref="infra.aws.credentials" />
				<property name="value" value="${infra.dataSource.masterDB.read.Password}" />
				<property name="plaintext" value="${infra.dataSource.masterDB.read.Password.plaintext}" />
			</bean>
		</property>
		<property name="defaultReadOnly" value="true" />
		<property name="defaultAutoCommit" value="false" />
		<property name="defaultQueryTimeout" value="60000" />
		<property name="initialSize" value="${infra.dataSource.masterDB.read.MaxTotal}" />
		<property name="maxIdle" value="${infra.dataSource.masterDB.read.MaxTotal}" />
		<property name="maxTotal" value="${infra.dataSource.masterDB.read.MaxTotal}" />
		<property name="lifo" value="true" />
		<property name="logAbandoned" value="false" />
		<property name="rollbackOnReturn" value="true" />
		<property name="validationQuery" value="show global variables where variable_name='innodb_read_only'" />
		<property name="validationQueryTimeout" value="1000" />
		<property name="testOnCreate" value="false" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="false" />
	</bean>
	
	<bean id="infra.protocol" class="jp.jleague.club.api.commons.properties.SessionUriInfraPropertiesBean">
		<property name="tokenRequestUri" value="${infra.session.tokenRequestUri}" />
		<property name="userInfoRequestUri" value="${infra.session.userInfoRequestUri}" />
		<property name="refleshTokenRequestUri" value="${infra.session.refleshTokenRequestUri}" />
	</bean>
</beans>
